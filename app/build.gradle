Properties localProperties = new Properties()
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'koin'
apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.hugo'

repositories {
    mavenCentral() // For Glide
    maven { url 'https://maven.fabric.io/public' }
    google()
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "net.feheren_fekete.applist"
        minSdkVersion 21
        targetSdkVersion 29

        versionCode 76
        versionName "7.6"

        multiDexEnabled true

        // Set this to false. Otherwise vector drawables won't work everywhere:
        // https://stackoverflow.com/questions/35761636/is-it-possible-to-use-vectordrawable-in-buttons-and-textviews-using-androiddraw/41855991#41855991
        vectorDrawables.useSupportLibrary = false

        manifestPlaceholders = [fabricApiKey : localProperties.getProperty('fabric.apikey')]
    }
    buildToolsVersion '28.0.3'
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // TODO: Remove when this is fixed: https://github.com/Kotlin/kotlinx.coroutines/issues/1064
    packagingOptions {
        pickFirst("META-INF/atomicfu.kotlin_module")
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'

    // Koin (dependency injection)
    implementation "org.koin:koin-core:$koin_version"
    //implementation "org.koin:koin-java:$koin_version" // For using Koin from Java code
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // Android
    kapt 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha01"
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation "androidx.room:room-ktx:2.2.5"
    kapt 'androidx.room:room-compiler:2.2.5'

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.4.0'

    // In-app purchases
    implementation 'com.android.billingclient:billing:2.2.0'
    implementation 'com.android.billingclient:billing-ktx:2.2.0'

    // Material dialog
    // We use this because this does a good job of not-covering
    // the dialog when the software keyboard is active.
    implementation 'com.afollestad.material-dialogs:core:3.1.1'
    implementation 'com.afollestad.material-dialogs:input:3.1.1'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation ("com.github.bumptech.glide:recyclerview-integration:4.11.0") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    // GPUImage for icon effects
    implementation 'jp.co.cyberagent.android:gpuimage:2.0.4'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    kapt 'org.greenrobot:eventbus-annotation-processor:3.1.1'

    // For icon pack icon ranking (string similarity algorithms)
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'

    // Others
    implementation 'com.parse.bolts:bolts-tasks:1.4.0'
}

kapt {
    arguments {
        arg('eventBusIndex', 'net.feheren_fekete.applist.ApplistEventBusIndex')
    }
}

// Must be last
apply plugin: 'com.google.gms.google-services'